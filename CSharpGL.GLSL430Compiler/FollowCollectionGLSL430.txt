FOLLOW(<translation_unit_nullable>)={ # }
FOLLOW(<external_declaration>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_3>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_3_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_3_1_2>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_3_1_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_3_1_1_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_2>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_2_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_2_1_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<external_declaration_1_1>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<compound_statement_no_new_scope_or_semicolon>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<declaration_or_expression_statement>)={ "++", "--", identifier, "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<declaration_or_expression_statement_1>)={ "++", "--", identifier, "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<simple_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<selection_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<selection_rest_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<selection_rest_statement_2>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<switch_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<switch_statement_list>)={ "}" }
FOLLOW(<case_label>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<iteration_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<for_init_statement>)={ "++", "--", identifier, "(", "+", "-", "!", "~", number, "true", "false" }
FOLLOW(<expression_statement>)={}
FOLLOW(<declaration_statement>)={}
FOLLOW(<declaration>)={}
FOLLOW(<declaration_3>)={}
FOLLOW(<declaration_3_3>)={}
FOLLOW(<semicolon_or_null>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", # }
FOLLOW(<declaration_3_3_2>)={}
FOLLOW(<declaration_3_3_1>)={}
FOLLOW(<declaration_3_3_1_1>)={}
FOLLOW(<declaration_3_2>)={}
FOLLOW(<declaration_3_2_1>)={}
FOLLOW(<declaration_3_1>)={}
FOLLOW(<declaration_3_1_1>)={}
FOLLOW(<declaration_2>)={}
FOLLOW(<declaration_2_1>)={}
FOLLOW(<function_prototype>)={}
FOLLOW(<function_declarator>)={}
FOLLOW(<function_parameters_or_null>)={ ")" }
FOLLOW(<function_header_with_parameters>)={}
FOLLOW(<function_header_with_parameters_2>)={ ")" }
FOLLOW(<function_header>)={ "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise" }
FOLLOW(<parameter_declaration>)={ ",", ")" }
FOLLOW(<parameter_declarator>)={}
FOLLOW(<parameter_type_specifier>)={}
FOLLOW(<init_declarator_list>)={}
FOLLOW(<init_declarator_list_2>)={ ";", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<equal_initializer_nullable>)={ ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<initializer>)={ ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<initializer_list>)={ ",", "}" }
FOLLOW(<initializer_list_2>)={ ",", "}" }
FOLLOW(<comma_or_null>)={ "}" }
FOLLOW(<single_declaration>)={ "," }
FOLLOW(<variable_initializer_nullable>)={ "," }
FOLLOW(<identifier_list_or_null>)={}
FOLLOW(<identifier_list>)={}
FOLLOW(<identifier_list_2>)={}
FOLLOW(<variable_name_or_null>)={ ";", ",", ")" }
FOLLOW(<for_rest_statement>)={ ")" }
FOLLOW(<conditionopt>)={ ";" }
FOLLOW(<condition>)={ ")", ";" }
FOLLOW(<statement_no_new_scope>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<compound_statement_no_new_scope>)={ "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<jump_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<expression_or_null>)={ ")", ";" }
FOLLOW(<compound_statement>)={ "else", "while", "{", identifier, "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<statement_list>)={}
FOLLOW(<statement_list_nullable>)={ "}" }
FOLLOW(<expression>)={ ")", ":", ";", "]" }
FOLLOW(<expression_2>)={ ")", ":", ";", "]" }
FOLLOW(<assignment_expression>)={ ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<unary_expression>)={ "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<postfix_expression>)={ "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<postfix_expression_3>)={ "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<postfix_expression_3_1>)={ "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<postfix_expression_2>)={ "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<FIELD_SELECTION>)={ "[", ".", "++", "--", "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<primary_expression>)={}
FOLLOW(<constant_primary_expression>)={ "[", ".", "++", "--", "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<bool_constant>)={ "[", ".", "++", "--", "*", "/", "%", "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", "&=", "^=", "|=", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<unary_operator>)={ identifier, "(", number, "true", "false", "++", "--", "+", "-", "!", "~" }
FOLLOW(<expression_or_void_or_null>)={ ")" }
FOLLOW(<index_selector_nullable>)={}
FOLLOW(<integer_expression>)={ "]" }
FOLLOW(<assignment_expression_2>)={ ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<assignment_operator>)={ "++", "--", identifier, "(", "+", "-", "!", "~", number, "true", "false" }
FOLLOW(<conditional_expression>)={ "]" }
FOLLOW(<conditional_expression_2>)={ ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<logical_or_expression>)={ "?", "]" }
FOLLOW(<logical_or_expression_2>)={ "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<logical_xor_expression>)={ "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<logical_xor_expression_2>)={ "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<logical_and_expression>)={ "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<logical_and_expression_2>)={ "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<inclusive_or_expression>)={ "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<inclusive_or_expression_2>)={ "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<exclusive_or_expression>)={ "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<exclusive_or_expression_2>)={ "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<and_expression>)={ "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<and_expression_2>)={ "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<equality_expression>)={ "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<equality_expression_2>)={ "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<relational_expression>)={ "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<relational_expression_2>)={ "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<shift_expression>)={ "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<shift_expression_2>)={ "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<additive_expression>)={ "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<additive_expression_2>)={ "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<multiplicative_expression>)={ "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "]", "}", "++", "--", "(", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<multiplicative_expression_2>)={ "+", "-", "<<", ">>", "<", ">", "<=", ">=", "==", "!=", "&", "^", "|", "&&", "^^", "||", "?", ",", "precision", "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")", ":", "}", "++", "--", "(", "!", "~", number, "true", "false", "]", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard" }
FOLLOW(<fully_specified_type>)={ identifier, "," }
FOLLOW(<type_specifier>)={ ";", ",", identifier, "precision", "void", "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ")" }
FOLLOW(<array_specifier>)={}
FOLLOW(<array_specifier_nullable>)={ identifier, ",", "precision", "void", "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, "=", ";", ")", "++", "--", "(", "+", "-", "!", "~", number, "true", "false", "else", "while", "{", "if", "switch", "case", "default", "do", "for", "continue", "break", "return", "discard", "}" }
FOLLOW(<constant_expression_or_null>)={ "]" }
FOLLOW(<constant_expression>)={}
FOLLOW(<type_specifier_nonarray>)={ "[", ";", ",", identifier, "precision", "void", "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ")" }
FOLLOW(<build_in_type>)={}
FOLLOW(<struct_specifier>)={ "[", identifier, ",", "precision", "void", "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", #, ";", ")" }
FOLLOW(<identifier_or_null>)={ "{" }
FOLLOW(<struct_declaration_list>)={ "}" }
FOLLOW(<struct_declaration_list_nullable>)={ "}" }
FOLLOW(<struct_declaration>)={ "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "}" }
FOLLOW(<struct_declarator_list>)={ ";" }
FOLLOW(<struct_declarator_list_2>)={ ";" }
FOLLOW(<struct_declarator>)={ ",", ";" }
FOLLOW(<type_qualifier>)={ "void", "struct", identifier, ";" }
FOLLOW(<type_qualifier_nullable>)={ "void", "struct", identifier, ";" }
FOLLOW(<single_type_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<storage_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<subroutine_2>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<type_name_list>)={ ")" }
FOLLOW(<type_name_list_2>)={ ")" }
FOLLOW(<layout_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<layout_qualifier_id_list>)={ ")" }
FOLLOW(<layout_qualifier_id_list_2>)={ ")" }
FOLLOW(<layout_qualifier_id>)={ ",", ")" }
FOLLOW(<layout_qualifier_id_2>)={ ",", ")" }
FOLLOW(<precision_qualifier>)={ "void", identifier, "struct", "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", ";" }
FOLLOW(<interpolation_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<invariant_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
FOLLOW(<precise_qualifier>)={ "const", "inout", "in", "out", "centroid", "patch", "sample", "uniform", "buffer", "shared", "coherent", "volatile", "restrict", "readonly", "writeonly", "subroutine", "layout", "high_precision", "medium_precision", "low_precision", "smooth", "flat", "noperspective", "invariant", "precise", "void", "struct", identifier, ";" }
